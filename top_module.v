// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Tue Jan 21 11:37:12 2025

top_module inst
(
	.clk_50M(clk_50M_sig) ,	// input  clk_50M_sig
	.dout(dout_sig) ,	// input  dout_sig
	.reset(reset_sig) ,	// input  reset_sig
	.cs_out(cs_out_sig) ,	// input  cs_out_sig
	.rx(rx_sig) ,	// input  rx_sig
	.adc_cs_n(adc_cs_n_sig) ,	// output  adc_cs_n_sig
	.din(din_sig) ,	// output  din_sig
	.adc_clk(adc_clk_sig) ,	// output  adc_clk_sig
	.enA(enA_sig) ,	// output  enA_sig
	.enB(enB_sig) ,	// output  enB_sig
	.in1(in1_sig) ,	// output  in1_sig
	.in2(in2_sig) ,	// output  in2_sig
	.in3(in3_sig) ,	// output  in3_sig
	.in4(in4_sig) ,	// output  in4_sig
	.filter(filter_sig) ,	// output [1:0] filter_sig
	.rgb1(rgb1_sig) ,	// output [2:0] rgb1_sig
	.rgb2(rgb2_sig) ,	// output [2:0] rgb2_sig
	.rgb3(rgb3_sig) 	// output [2:0] rgb3_sig
);

